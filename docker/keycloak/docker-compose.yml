version: '3.7'

volumes:
  postgres_data_keycloak:
    driver: local

services:
  postgres_keycloak:
    image: postgres:10-alpine
    restart: on-failure
    container_name: postgres_keycloak
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - db
    labels:
      - "traefik.enable=false"

  keycloak:
    image: jboss/keycloak:master
    restart: on-failure
    container_name: keycloak
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres_keycloak
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=password
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=secret
      - KEYCLOAK_IMPORT=/tmp/realm.json
      - KEYCLOAK_LOGLEVEL=INFO
      - PROXY_ADDRESS_FORWARDING=true
    volumes:
      - ${PWD}/dev/dev-realm.json:/tmp/realm.json
    depends_on:
      - postgres_keycloak
    networks:
      - web
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:keycloak.${DOMAINNAME}"
      - "traefik.port=8443"
      - "traefik.protocol=https"
      - "traefik.docker.network=web"
    command: ["-b", "0.0.0.0", "-Dkeycloak.profile.feature.docker=enabled"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/"]
      interval: 5s
      timeout: 2s
      retries: 15
      start_period: 30s

networks:
  db:
    external:
      name: db
  web:
    external:
      name: web
